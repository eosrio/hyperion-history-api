tag: latest
config:
  serverName: "explorer.dev.vops.co"
  provider_url: https://voice.com
  provider_name: "voice"
  ## this only take the image form URL
  chain_logo_url: "https://storage.googleapis.com/voice_logo/logo.ico"
  es_replicas: 1 

services:
  voice-eos-hyperion:
    customLabels:
      app: "voice-eos-hyperion-api"
      app.kubernetes.io/instance: "voice-eos-hyperion-api"
    customSelectors: 
      app: "voice-eos-hyperion-api"
    type: NodePort
    ports:
      - port: 7000
        targetPort: 7000
        protocol: TCP
        name: hyperion-api
  voice-redis:
    customLabels:
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-redis"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-redis"
      app.kubernetes.io/component: "voice-hyperion-redis"
    type: ClusterIP
    customSelectors: 
      app: "voice-redis"
    ports:
      - port: 6379
        targetPort: 6379
        protocol: TCP
        name: voice-redis

  voice-hyperion-rabbit-mq:
    customLabels:
      # serviceMonitors: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-hyperion"
      app.kubernetes.io/component: "voice-hyperion-rabbit-mq"
    type: ClusterIP
    customSelectors: 
      service: "voice-hyperion-rabbit-mq"
    ports:
      - port: 5672
        targetPort: 5672
        protocol: TCP
        name: rabbitmq-port
      - port: 15672
        targetPort: 15672
        protocol: TCP
        name: rabbitmq-management-port
      - port: 15692
        targetPort: 15692
        protocol: TCP
        name: monitoring


statefulsets:
  voice-hyperion-rabbit-mq:
    serviceName: rabbit-mq-headless
    tolerations:
      - key: cloud.google.com/gke-preemptible
        operator: Equal
        effect: NoSchedule
        value: "true"
    nodeSelector:
      cloud.google.com/gke-preemptible: "true"  
    customLabels:
      service: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-hyperion"
      app.kubernetes.io/component: "voice-hyperion-rabbit-mq"
    replicaCount: 1
    customSelectors:
      service: voice-hyperion-rabbit-mq
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        partition: 0
    volumeClaimTemplates:
      - metadata:
          name: rabbit-mq-data
          labels:
            app.kubernetes.io/name: voice
            app.kubernetes.io/instance: "voice-hyperion-rabbit-mq"
            app.kubernetes.io/branch: "master"
            app.kubernetes.io/authority: "voice-eos-hyperion"
            app.kubernetes.io/component: "voice-eos-hyperion"
            app.kubernetes.io/chain: "voice-hyperion-rabbit-mq"
        spec:
          storageClassName: standard
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 256Gi
    containers:
      voice-hyperion-rabbit-mq:
        image:  rabbitmq:3.9.11-management-alpine
        imagePullPolicy: IfNotPresent
        extraVars:
          RABBITMQ_DEFAULT_VHOST: voice
          RABBITMQ_DEFAULT_USER: voice
          RABBITMQ_DEFAULT_PASS: voice

deployments:
  voice-redis:
    replicaCount: 1
    terminationGracePeriodSeconds: 60
    tolerations:
      - key: cloud.google.com/gke-preemptible
        operator: Equal
        effect: NoSchedule
        value: "true"
    nodeSelector:
      cloud.google.com/gke-preemptible: "true"        
    containers:
      voice-redis:
        containerPorts:
          - containerPort: 6379
            protocol: TCP
            name: voice-redis
        image: "redis:5.0.9-alpine"
        imagePullPolicy: IfNotPresent
        extraVars:
          http_proxy: http://proxy.service:3128
          https_proxy: http://proxy.service:3128 
          GLOBAL_AGENT_HTTP_PROXY: http://proxy.service:3128 
          GLOBAL_AGENT_HTTPS_PROXY: http://proxy.service:3128 
          no_proxy: .svc.cluster.local,.service,.internal,.vops.int,metadata.google.internal,.psc.us-west1.gcp.cloud.es.io,.psc.us-west1.gcp.cloud.es.io
          GLOBAL_AGENT_NO_PROXY	: "*.svc.cluster.local,*.service,*.internal,*.vops.int,metadata.google.internal,.psc.us-west1.gcp.cloud.es.io,.psc.us-west1.gcp.cloud.es.io,.psc.us-west1.gcp.cloud.es.io"

  voice-eos-hyperion-api:
    replicaCount: 1
    tolerations:
      - key: cloud.google.com/gke-preemptible
        operator: Equal
        effect: NoSchedule
        value: "true"
    nodeSelector:
      cloud.google.com/gke-preemptible: "true"  
    volumes: 
    - name: eos-hyperion-api-config
      configMap:
        name: eos-hyperion-api-config
    - name: eos-hyperion-connections
      configMap:
        name:  eos-hyperion-connections        
    initContainers:
      check-hyperion-rabbit-mq-health:
        extraVars:
          user: voice
          pass: voice
          vhost: voice
        image: "gcr.io/voice-dev-infra-services/auto-init-container/auto-init-container:latest"
        imagePullPolicy: Always
        command: ['bash','check-rabbit-mq-health.sh','voice-hyperion-rabbit-mq.{{ .Release.Namespace }}.svc.cluster.local']
    containers:
      voice-eos-hyperion-api:
        livenessProbe:
          httpGet:
            path: /v2/health
            port: 7000
          periodSeconds: 10
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /v2/health
            port: 7000
          initialDelaySeconds: 10
          periodSeconds: 10
        containerPorts:
          - containerPort: 7000
            protocol: TCP
            name: hyperion-api
        image: "gcr.io/voice-dev-infra-services/voice/voice-eos-hyperion:{{ .Values.tag }}"
        imagePullPolicy: Always
        command: ["bash", "run.sh","voice-api"]
        extraVars:
          http_proxy: http://proxy.service:3128
          https_proxy: http://proxy.service:3128 
          GLOBAL_AGENT_HTTP_PROXY: http://proxy.service:3128 
          GLOBAL_AGENT_HTTPS_PROXY: http://proxy.service:3128 
          no_proxy: .svc.cluster.local,.service,.internal,.vops.int,metadata.google.internal,.psc.us-west1.gcp.cloud.es.io,.psc.us-west1.gcp.cloud.es.io
          GLOBAL_AGENT_NO_PROXY	: "*.svc.cluster.local,*.service,*.internal,*.vops.int,metadata.google.internal,.psc.us-west1.gcp.cloud.es.io,.psc.us-west1.gcp.cloud.es.io,.psc.us-west1.gcp.cloud.es.io"
        lifecycle:
          prestop:
            exec:
              command: ["bash","stop.sh",voice-api""]
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        volumeMounts:
          - name: eos-hyperion-connections
            mountPath: hyperion-history-api/connections.json
            subPath: connections.json
            readOnly: false
          - name: eos-hyperion-api-config
            mountPath: hyperion-history-api/chains/voice.config.json
            subPath: voice.config.json
            readOnly: false

configmaps:
  config:
    eos-hyperion-api-config:
      indexer: false
      api: true
  connections:
    eos-hyperion-connections:
      elasticsearch:
        protocol: http
        host: elastic.service.us-west1-dev.vops.int
        ingest_nodes: elastic.service.us-west1-dev.vops.int
        user: ""
        pass: ""     
      redis:
        branch: true
        host: "voice-redis"
        port: "6379"
      chains:
        name: "voice dev chain"
        chain_id: "53b1b94e5159791c1431eda07f2e6a3679bf5207e4039cf3e3f87a36e16bae2d"
        http: "http://chain-api-lb-dev.service.b-oma-devel.vops.int:8888"
        ship: "ws://ship-lb-dev.service.b-oma-devel.vops.int:8080"
        WS_ROUTER_PORT: 7001
        WS_ROUTER_HOST: "127.0.0.1"
      amqp: 
        service: voice-hyperion-rabbit-mq
        user: "voice"
        pass: "voice"
        vhost: "voice"