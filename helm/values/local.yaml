release:
  tag: latest

config:
  serverName: "localhost:7000"
  provider_url: https://voice.com
  provider_name: "voice"
  ## this only take the image form URL
  chain_logo_url: "https://storage.googleapis.com/voice_logo/logo.ico"
  es_replicas: 1
  abi_scan: false

services:
  voice-eos-hyperion:
    customLabels:
      app: "voice-eos-hyperion-api"
      app.kubernetes.io/instance: "voice-eos-hyperion-api"
    customSelectors:
      app: "voice-eos-hyperion-api"
    type: NodePort
    ports:
      - port: 7000
        targetPort: 7000
        protocol: TCP
        name: hyperion-api

  voice-redis:
    customLabels:
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-redis"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-redis"
      app.kubernetes.io/component: "voice-hyperion-redis"
    type: ClusterIP
    customSelectors:
      app: "voice-redis"
    ports:
      - port: 6379
        targetPort: 6379
        protocol: TCP
        name: voice-redis

  voice-elasticsearch:
    type: ClusterIP
    customSelectors:
      service: voice-elasticsearch
    customLabels:
      service: "voice-elasticsearch"
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-elasticsearch"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-hyperion"
      app.kubernetes.io/component: "voice-elasticsearch"
    ports:
      - port: 9200
        protocol: TCP
        name: elastic-search

  voice-hyperion-rabbit-mq:
    customLabels:
      # serviceMonitors: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-hyperion"
      app.kubernetes.io/component: "voice-hyperion-rabbit-mq"
    type: ClusterIP
    customSelectors:
      service: "voice-hyperion-rabbit-mq"
    ports:
      - port: 5672
        targetPort: 5672
        protocol: TCP
        name: rabbitmq-port
      - port: 15672
        targetPort: 15672
        protocol: TCP
        name: rabbitmq-management-port
      - port: 15692
        targetPort: 15692
        protocol: TCP
        name: monitoring

statefulsets:
  voice-hyperion-rabbit-mq:
    serviceName: rabbit-mq-headless
    customLabels:
      service: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-hyperion-rabbit-mq"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-hyperion"
      app.kubernetes.io/component: "voice-hyperion-rabbit-mq"
    replicaCount: 1
    customSelectors:
      service: voice-hyperion-rabbit-mq
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        partition: 0
    volumeClaimTemplates:
      - metadata:
          name: rabbit-mq-data
          labels:
            app.kubernetes.io/name: voice
            app.kubernetes.io/instance: "voice-hyperion-rabbit-mq"
            app.kubernetes.io/branch: "master"
            app.kubernetes.io/authority: "voice-eos-hyperion"
            app.kubernetes.io/component: "voice-eos-hyperion"
            app.kubernetes.io/chain: "voice-hyperion-rabbit-mq"
        spec:
          storageClassName: hostpath
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    containers:
      voice-hyperion-rabbit-mq:
        image:  rabbitmq:3.9.11-management-alpine
        imagePullPolicy: IfNotPresent
        extraVars:
          RABBITMQ_DEFAULT_VHOST: voice
          RABBITMQ_DEFAULT_USER: voice
          RABBITMQ_DEFAULT_PASS: voice

  voice-elasticsearch:
    serviceName: voice-elasticsearch
    customLabels:
      service: "voice-elasticsearch"
      app.kubernetes.io/name: voice
      app.kubernetes.io/instance: "voice-elasticsearch"
      app.kubernetes.io/branch: "master"
      app.kubernetes.io/authority: "voice-eos-hyperion"
      app.kubernetes.io/component: "voice-elasticsearch"
    replicaCount: 1
    customSelectors:
      service : voice-elasticsearch
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
          name: voice-elasticsearch
          labels:
            app.kubernetes.io/name: voice
            app.kubernetes.io/instance: "voice-elasticsearch"
            app.kubernetes.io/branch: "master"
            app.kubernetes.io/authority: "voice-eos-hyperion"
            app.kubernetes.io/component: "voice-eos-hyperion"
            app.kubernetes.io/chain: "voice-elasticsearch"
      spec:
        storageClassName: hostpath
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    containers:
      voice-elasticsearch:
        image:  elasticsearch:7.17.0
        imagePullPolicy: IfNotPresent
        extraVars:
          discovery.type: single-node
          cluster.name: es-cluster
          node.name: es01
          bootstrap.memory_lock: "true"
          xpack.security.enabled: "true"
          ES_JAVA_OPTS: "-Xms2g -Xmx2g"
          ELASTIC_USERNAME: elastic
          ELASTIC_PASSWORD: password

deployments:
  voice-redis:
    replicaCount: 1
    terminationGracePeriodSeconds: 60
    containers:
      voice-redis:
        containerPorts:
          - containerPort: 6379
            protocol: TCP
            name: voice-redis
        image: "redis:5.0.9-alpine"
        imagePullPolicy: IfNotPresent

  voice-eos-hyperion-indexer:
    replicaCount: 1
    terminationGracePeriodSeconds: 60
    volumes:
    - name: "{{if .Values.config.abi_scan}}eos-hyperion-config-abi{{else}}eos-hyperion-config{{end}}"
      configMap:
        name: "{{if .Values.config.abi_scan}}eos-hyperion-config-abi{{else}}eos-hyperion-config{{end}}"
    - name: eos-hyperion-connections
      configMap:
        name: eos-hyperion-connections
    initContainers:
      check-elastic:
        image: "gcr.io/voice-ops-dev/auto-init-container/auto-init-container:latest"
        imagePullPolicy: IfNotPresent
        command:
          - '/bin/sh'
          - '-c'
          - 'until curl -s -f -o /dev/null "elastic:password@voice-elasticsearch.default.svc.cluster.local:9200";  do   echo "waiting for elastic" && sleep 5; done; echo "connected"'
      check-hyperion-rabbit-mq-health:
        extraVars:
          user: voice
          pass: voice
          vhost: voice
        image: "gcr.io/voice-ops-dev/auto-init-container/auto-init-container:latest"
        imagePullPolicy: IfNotPresent
        command: ['bash','check-rabbit-mq-health.sh','voice-hyperion-rabbit-mq.{{ .Release.Namespace }}.svc.cluster.local']
    lifecycle:
          preStop:
            exec:
              command: ["bash","stop.sh","voice-indexer"]
    containers:
      voice-eos-hyperion-indexer:
        containerPorts:
          - containerPort: 7000
            protocol: TCP
            name: hyperion-api
        image: "gcr.io/voice-dev-infra-services/voice/voice-eos-hyperion:{{ .Values.tag }}"
        imagePullPolicy: IfNotPresent
        command: ["bash", "run.sh","voice-indexer"]
        volumeMounts:
          - name: eos-hyperion-connections
            mountPath: /hyperion-history-api/connections.json
            subPath: connections.json
          - name: "{{if .Values.config.abi_scan}}eos-hyperion-config-abi{{else}}eos-hyperion-config{{end}}"
            mountPath: /hyperion-history-api/chains/voice.config.json
            subPath: voice.config.json

  voice-eos-hyperion-api:
    replicaCount: 1
    volumes:
    - name:  "{{if .Values.config.abi_scan}}eos-hyperion-config-abi{{else}}eos-hyperion-config{{end}}"
      configMap:
        name:  "{{if .Values.config.abi_scan}}eos-hyperion-config-abi{{else}}eos-hyperion-config{{end}}"
    - name: eos-hyperion-connections
      configMap:
        name:  eos-hyperion-connections
    initContainers:
      check-elastic:
        image: "gcr.io/voice-ops-dev/auto-init-container/auto-init-container:latest"
        imagePullPolicy: IfNotPresent
        command:
          - '/bin/sh'
          - '-c'
          - 'until curl -s -f -o /dev/null "elastic:password@voice-elasticsearch.default.svc.cluster.local:9200";  do   echo "waiting for elastic" && sleep 5; done; echo "connected"'
      check-hyperion-rabbit-mq-health:
        extraVars:
          user: voice
          pass: voice
          vhost: voice
        image: "gcr.io/voice-ops-dev/auto-init-container/auto-init-container:latest"
        imagePullPolicy: IfNotPresent
        command: ['bash','check-rabbit-mq-health.sh','voice-hyperion-rabbit-mq.{{ .Release.Namespace }}.svc.cluster.local']
    containers:
      voice-eos-hyperion-api:
        containerPorts:
          - containerPort: 7000
            protocol: TCP
            name: hyperion-api
        image: "gcr.io/voice-dev-infra-services/voice/voice-eos-hyperion:{{ .Values.tag }}"
        imagePullPolicy: IfNotPresent
        command: ["bash", "run.sh","voice-api"]
        lifecycle:
          preStop:
            exec:
              command: ["bash","stop.sh","voice-api"]
        volumeMounts:
          - name: eos-hyperion-connections
            mountPath: /hyperion-history-api/connections.json
            subPath: connections.json
            readOnly: false
          - name:  "{{if .Values.config.abi_scan}}eos-hyperion-config-abi{{else}}eos-hyperion-config{{end}}"
            mountPath: /hyperion-history-api/chains/voice.config.json
            subPath: voice.config.json
            readOnly: false
        extraVars:
          # LaunchDarkly Config
          LAUNCHDARKLY_SDK_KEY: "foobarbaz"

configmaps:
  eos-hyperion-config-abi:
    toJson: true
    data:
      voice.config.json:
        api:
          enabled: true
          pm2_scaling: 1
          node_max_old_space_size: 1024
          chain_name: voice
          server_addr: 0.0.0.0
          server_port: 7000
          server_name: "{{ .Values.config.serverName }}"
          provider_name: "{{ .Values.config.provider_name }}"
          provider_url:  "{{ .Values.config.provider_url }}"
          chain_api: ''
          push_api: ''
          chain_logo_url: https://storage.googleapis.com/voice_logo/logo.ico
          enable_caching: true
          cache_life: 1
          limits:
            get_actions: 1000
            get_voters: 100
            get_links: 1000
            get_deltas: 1000
            get_trx_actions: 200
          access_log: false
          chain_api_error_log: true
          custom_core_token: ''
          enable_export_action: false
          disable_rate_limit: false
          rate_limit_rpm: 1000
          rate_limit_allow: []
          disable_tx_cache: false
          tx_cache_expiration_sec: 3600
          v1_chain_cache:
          - path: get_block
            ttl: 3000
          - path: get_info
            ttl: 500
        indexer:
          enabled: true
          node_max_old_space_size: 4096
          start_on: 1
          stop_on: 0
          rewrite: false
          purge_queues: false
          live_reader: true
          live_only_mode: false
          abi_scan_mode: false
          fetch_block: true
          fetch_traces: true
          disable_reading: false
          disable_indexing: false
          process_deltas: true
          disable_delta_rm: true
        settings:
          preview: false
          chain: voice
          eosio_alias: eosio
          parser: '1.8'
          auto_stop: 0
          index_version: v1
          debug: true
          bp_logs: false
          bp_monitoring: false
          ipc_debug_rate: 60000
          allow_custom_abi: false
          rate_monitoring: true
          max_ws_payload_mb: 256
          ds_profiling: false
          auto_mode_switch: false
          hot_warm_policy: false
          custom_policy: ''
          bypass_index_map: false
          index_partition_size: 10000000
          es_replicas: 1
        blacklists:
          actions: []
          deltas: []
        whitelists:
          actions: []
          deltas: []
          max_depth: 10
          root_only: false
        scaling:
          readers: 1
          ds_queues: 1
          ds_threads: 1
          ds_pool_size: 1
          indexing_queues: 1
          ad_idx_queues: 1
          dyn_idx_queues: 1
          max_autoscale: 4
          batch_size: 5000
          resume_trigger: 5000
          auto_scale_trigger: 20000
          block_queue_limit: 10000
          max_queue_limit: 100000
          routing_mode: heatmap
          polling_interval: 10000
        features:
          streaming:
            enable: false
            traces: false
            deltas: false
          tables:
            proposals: true
            accounts: true
            voters: true
          index_deltas: true
          index_transfer_memo: false
          index_all_deltas: true
          deferred_trx: false
          failed_trx: false
          resource_limits: false
          resource_usage: false
        prefetch:
          read: 50
          block: 100
          index: 500
        plugins:
          explorer:
            enabled: true
            chain_logo_url: https://storage.googleapis.com/voice_logo/logo.ico
            server_name: explorer.dev.vops.co

  eos-hyperion-config:
    toJson: true
    data:
      voice.config.json:
        api:
          enabled: true
          pm2_scaling: 1
          node_max_old_space_size: 1024
          chain_name: voice
          server_addr: 0.0.0.0
          server_port: 7000
          server_name: "{{ .Values.config.serverName }}"
          provider_name: " {{ .Values.config.provider_name }}"
          provider_url:  "{{ .Values.config.provider_url }}"
          chain_api: ''
          push_api: ''
          chain_logo_url: https://storage.googleapis.com/voice_logo/logo.ico
          enable_caching: true
          cache_life: 1
          limits:
            get_actions: 1000
            get_voters: 100
            get_links: 1000
            get_deltas: 1000
            get_trx_actions: 200
          access_log: false
          chain_api_error_log: true
          custom_core_token: ''
          enable_export_action: false
          disable_rate_limit: false
          rate_limit_rpm: 1000
          rate_limit_allow: []
          disable_tx_cache: false
          tx_cache_expiration_sec: 3600
          v1_chain_cache:
          - path: get_block
            ttl: 3000
          - path: get_info
            ttl: 500
        indexer:
          enabled: true
          node_max_old_space_size: 4096
          start_on: 1
          stop_on: 0
          rewrite: false
          purge_queues: false
          live_reader: true
          live_only_mode: false
          abi_scan_mode: false
          fetch_block: true
          fetch_traces: true
          disable_reading: false
          disable_indexing: false
          process_deltas: true
          disable_delta_rm: true
        settings:
          preview: false
          chain: voice
          eosio_alias: eosio
          parser: '1.8'
          auto_stop: 0
          index_version: v1
          debug: true
          bp_logs: false
          bp_monitoring: false
          ipc_debug_rate: 60000
          allow_custom_abi: false
          rate_monitoring: true
          max_ws_payload_mb: 256
          ds_profiling: false
          auto_mode_switch: false
          hot_warm_policy: false
          custom_policy: ''
          bypass_index_map: false
          index_partition_size: 10000000
          es_replicas: 1
        blacklists:
          actions: []
          deltas: []
        whitelists:
          actions: []
          deltas: []
          max_depth: 10
          root_only: false
        scaling:
          readers: 1
          ds_queues: 1
          ds_threads: 1
          ds_pool_size: 1
          indexing_queues: 1
          ad_idx_queues: 1
          dyn_idx_queues: 1
          max_autoscale: 4
          batch_size: 5000
          resume_trigger: 5000
          auto_scale_trigger: 20000
          block_queue_limit: 10000
          max_queue_limit: 100000
          routing_mode: round_robin
          polling_interval: 10000
        features:
          streaming:
            enable: false
            traces: false
            deltas: false
          tables:
            proposals: true
            accounts: true
            voters: true
          index_deltas: true
          index_transfer_memo: false
          index_all_deltas: true
          deferred_trx: false
          failed_trx: false
          resource_limits: false
          resource_usage: false
        prefetch:
          read: 50
          block: 100
          index: 500
        plugins:
            explorer:
              enabled: true
              chain_logo_url: https://storage.googleapis.com/voice_logo/logo.ico
              server_name: explorer.dev.vops.co

  eos-hyperion-connections:
    toJson: true
    data:
      connections.json:
        amqp:
          host: voice-hyperion-rabbit-mq.{{ .Release.Namespace }}.svc.cluster.local:5672
          api: voice-hyperion-rabbit-mq.{{ .Release.Namespace }}.svc.cluster.local:15672
          protocol: http
          user: voice
          pass: voice
          vhost: voice
          frameMax: '0x10000'
        elasticsearch:
          protocol: http
          host: voice-elasticsearch.{{ .Release.Namespace }}.svc.cluster.local:9200
          ingest_nodes:
          - voice-elasticsearch.{{ .Release.Namespace }}.svc.cluster.local:9200
          user: elastic
          pass: password
        redis:
          host: "voice-redis.{{ .Release.Namespace }}.svc.cluster.local"
          port: '6379'
        chains:
          voice:
            name: "voice production chain"
            chain_id: "6a2f1d83a0375271b7018cc9190098f2af0dc49ca4d809cfa83d41612864f324"
            http: "http://chain-producer.{{ .Release.Namespace }}.svc.cluster.local:8888"
            ship: "ws://chain-producer.{{ .Release.Namespace }}.svc.cluster.local:8080"
            WS_ROUTER_PORT: 7001
            WS_ROUTER_HOST: "127.0.0.1"
