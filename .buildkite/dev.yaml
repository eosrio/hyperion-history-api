defaults:
  agents: &default-agents
    queue: voice-app-builder-v2
  plugins: &default-plugins
    - first-aml/git-clone:
        repository: https://github.com/voice-social/voice-buildkite-template.git

steps:
# helm deploy to dev
  - label: ":helm: Trigger Helm Deploy"
    command: |
              export NO_PROXY="\${KUBERNETES_SERVICE_HOST}"
      echo "--- :helm: Helm dry-run"
      if helm upgrade -i ${HELM_RELEASE} helm/ -f ${HELM_VALUE_FILE} -n ${HELM_RELEASE_NAMESPACE} --set release.tag=${HELM_RELEASE_TAG} --dry-run > /dev/null; then
        echo "dry-run completed OK."
      else
        exit 1;
      fi
      echo "--- :helm: Helm deploy"
      helm upgrade -i ${HELM_RELEASE} helm/ -f ${HELM_VALUE_FILE} -n ${HELM_RELEASE_NAMESPACE} --set release.tag=${HELM_RELEASE_TAG}
      echo "--- :helm: Clean up voice helm repo"
      helm repo remove voice-helm-repo
      echo "--- :codeclimate: Upload Deployment to codeclimate"
      VELOCITY_DEPLOYMENT_TOKEN=$$(cat /root/.codeclimate/token)
      curl -d "token=$${VELOCITY_DEPLOYMENT_TOKEN}" -d "revision=$${BUILDKITE_COMMIT}" -d "repository_url=$${BUILDKITE_REPO}" -d "branch=$${BUILDKITE_BRANCH}" -d "environment=${HELM_RELEASE_NAMESPACE}" -d "version=$${BUILDKITE_COMMIT}" https://velocity.codeclimate.com/deploys
    env:
      HELM_RELEASE: voice-eos-hyperion
      HELM_RELEASE_NAMESPACE: dev
      HELM_RELEASE_TAG: ${BUILDKITE_COMMIT}
      HELM_VALUE_FILE: helm/values/dev.yaml
      BUILDKITE_AGENT: voice-main-dev-deployer
    concurrency: 1
    concurrency_group: "${BUILDKITE_PIPELINE_SLUG}/dev"
    agents: *default-agents
    plugins: *default-plugins

  # - wait

  # - command: |
  #     ./scripts/publish-subgraph.sh -e dev -n voice-payments-graphql
  #   label: ":graphql: Publishing subgraph for voice-payments-graphql"
  #   agents:
  #     queue: voice-infra-devel-v2
  #   concurrency: 1
  #   concurrency_group: "${BUILDKITE_PIPELINE_SLUG}/pubish-dev"

  # - wait

  # - trigger: voice-api-gateway-generated-types
  #   label: ":typescript: Generate Supergraph Types"
  #   build:
  #     env:
  #       TRIGGER_API: "${BUILDKITE_PIPELINE_SLUG}"